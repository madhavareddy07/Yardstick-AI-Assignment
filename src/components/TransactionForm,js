"use client";

import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { useState, useEffect } from "react";

const transactionSchema = z.object({
  amount: z.number().min(0.01),
  date: z.string().nonempty(),
  description: z.string().nonempty(),
  category: z.string().nonempty(),
});

export default function TransactionForm({ onSubmit }) {
  const [categories, setCategories] = useState([]);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({
    resolver: zodResolver(transactionSchema),
  });

  useEffect(() => {
    fetch("/api/categories")
      .then((res) => res.json())
      .then(setCategories);
  }, []);

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
      <div>
        <label htmlFor="amount">Amount</label>
        <input id="amount" type="number" step="0.01" {...register("amount")} />
        {errors.amount && <p>{errors.amount.message}</p>}
      </div>
      <div>
        <label htmlFor="date">Date</label>
        <input id="date" type="date" {...register("date")} />
        {errors.date && <p>{errors.date.message}</p>}
      </div>
      <div>
        <label htmlFor="description">Description</label>
        <input id="description" type="text" {...register("description")} />
        {errors.description && <p>{errors.description.message}</p>}
      </div>
      <div>
        <label htmlFor="category">Category</label>
        <select id="category" {...register("category")}>
          {categories.map((category) => (
            <option key={category} value={category}>
              {category}
            </option>
          ))}
        </select>
        {errors.category && <p>{errors.category.message}</p>}
      </div>
      <button type="submit">Submit</button>
    </form>
  );
}